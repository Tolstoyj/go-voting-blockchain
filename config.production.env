# Production Environment Configuration
# Copy this file to .env and update with your production values

# =============================================================================
# SERVER CONFIGURATION
# =============================================================================
PORT=8080
GIN_MODE=release

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================
# PostgreSQL Database Settings
POSTGRES_DB=voting_blockchain
POSTGRES_USER=voting_user
POSTGRES_PASSWORD=CHANGE_THIS_SECURE_PASSWORD

# Database Connection URL (auto-generated from above)
DATABASE_URL=postgres://voting_user:CHANGE_THIS_SECURE_PASSWORD@voting-postgres:5432/voting_blockchain?sslmode=require

# =============================================================================
# REDIS CONFIGURATION
# =============================================================================
# Redis Cache Settings
REDIS_PASSWORD=CHANGE_THIS_REDIS_PASSWORD

# Redis Connection URL (auto-generated from above)
REDIS_URL=redis://:CHANGE_THIS_REDIS_PASSWORD@voting-redis:6379/0

# =============================================================================
# BLOCKCHAIN CONFIGURATION
# =============================================================================
# Mining difficulty (3-6, higher = more secure but slower)
MINING_DIFFICULTY=4

# Block reward (can be set to 0 for voting-only blockchain)
BLOCK_REWARD=1.0

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================
# JWT Secret Key - MUST BE CHANGED IN PRODUCTION!
# Generate with: openssl rand -base64 32
JWT_SECRET=CHANGE_THIS_TO_A_SECURE_JWT_SECRET_KEY_MINIMUM_32_CHARACTERS

# JWT Token Expiration Times
JWT_EXPIRATION=24h
JWT_REFRESH_EXPIRATION=168h

# =============================================================================
# ADMIN CONFIGURATION
# =============================================================================
# Default admin credentials - MUST BE CHANGED IN PRODUCTION!
ADMIN_USERNAME=admin
ADMIN_PASSWORD=CHANGE_THIS_SECURE_ADMIN_PASSWORD

# =============================================================================
# CORS CONFIGURATION
# =============================================================================
# Allowed origins for CORS (comma-separated, no spaces)
# Example: https://yourdomain.com,https://app.yourdomain.com
CORS_ALLOWED_ORIGINS=https://yourdomain.com,https://app.yourdomain.com

# Allowed HTTP methods
CORS_ALLOWED_METHODS=GET,POST,PUT,DELETE,OPTIONS

# Allowed headers
CORS_ALLOWED_HEADERS=Content-Type,Authorization,X-Requested-With

# =============================================================================
# RATE LIMITING CONFIGURATION
# =============================================================================
# Rate limiting tiers (requests per window)
RATE_LIMIT_STRICT=10
RATE_LIMIT_MODERATE=30
RATE_LIMIT_GENEROUS=100

# Rate limiting window duration
RATE_LIMIT_WINDOW=1m

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================
# Log level (debug, info, warn, error)
LOG_LEVEL=info

# Log format (json, text)
LOG_FORMAT=json

# =============================================================================
# DEPLOYMENT CONFIGURATION
# =============================================================================
# API Port (external port for the application)
API_PORT=8080

# Build information (auto-populated by CI/CD)
BUILD_DATE=
VERSION=1.1.0
VCS_REF=

# =============================================================================
# MONITORING CONFIGURATION (Optional)
# =============================================================================
# Grafana admin password (for monitoring profile)
GRAFANA_PASSWORD=CHANGE_THIS_GRAFANA_PASSWORD

# =============================================================================
# SSL/TLS CONFIGURATION (for Nginx)
# =============================================================================
# SSL certificate paths (relative to configs/ssl/)
SSL_CERT_FILE=cert.pem
SSL_KEY_FILE=key.pem

# =============================================================================
# BACKUP CONFIGURATION (Optional)
# =============================================================================
# Backup settings
BACKUP_ENABLED=true
BACKUP_SCHEDULE=0 2 * * *
BACKUP_RETENTION_DAYS=30
BACKUP_S3_BUCKET=your-backup-bucket
BACKUP_S3_REGION=us-east-1

# =============================================================================
# SECURITY REMINDERS
# =============================================================================
# 1. Change all default passwords
# 2. Use strong, unique passwords
# 3. Generate secure JWT secret with: openssl rand -base64 32
# 4. Restrict CORS origins to your actual domains
# 5. Use HTTPS in production
# 6. Enable SSL/TLS for database connections
# 7. Set up proper firewall rules
# 8. Regular security updates
# 9. Monitor logs for suspicious activity
# 10. Implement backup and disaster recovery procedures

# =============================================================================
# PRODUCTION CHECKLIST
# =============================================================================
# [ ] All passwords changed from defaults
# [ ] JWT secret generated securely
# [ ] CORS origins configured properly
# [ ] SSL certificates installed
# [ ] Database SSL enabled
# [ ] Firewall configured
# [ ] Monitoring enabled
# [ ] Backups scheduled
# [ ] Health checks working
# [ ] Rate limiting tested
# [ ] Security headers configured
# [ ] Log rotation set up
# [ ] Performance monitoring active
# [ ] Disaster recovery plan in place
